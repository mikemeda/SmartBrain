#!/usr/bin/env node

'use strict';

let fs = require('fs');
let path = require('path');
let yargs = require('yargs');
let mkdirp = require('mkdirp');
let startWatch = require('../lib/index');
let cliHeader = require('../lib/cliHeader');
let configPath = path.join(process.cwd(), '.tachyon.js');
let TachyonConfig = require('../lib/config');
let confTempPath = path.resolve(__dirname, '../lib/.tachyon.template.js');
let confTemp = fs.readFileSync(confTempPath, 'utf8');
let pkgJson = path.resolve(__dirname, '../package.json');
let initCompletion = `
init completed -- happy watching
  Run \`tachyon watch\` to get started
`;

function init(){
  console.log('setting up tachyon');
  mkdirp.sync('./tests/_fixtures');
  mkdirp.sync('./tests/_setup');
  console.log('ensuring tests/* are present');
  if (fs.existsSync(configPath)) {
    console.log('couldn\'t overwrite existing config at:', configPath);
  } else {
    fs.writeFileSync(configPath, confTemp);
    console.log('wrote template to:', configPath);
  }
  console.log(initCompletion);
  process.exit();
}

function watch(argv){
  console.log(cliHeader);
  startWatch(new TachyonConfig(argv.file));
}

let commands = {init, watch};

yargs
  .usage('tachyon [command]')
  .command('init', 'setup tachyon in your local project', undefined, commands.init)
  .command('watch', 'watch this project', undefined, commands.watch)
  .help('h')
  .version(function() {
    return JSON.parse(fs.readFileSync(pkgJson, 'utf8')).version;
  })
  .option('f', {
    alias: 'file',
    default: configPath,
    describe: 'tachyon config file',
    type: 'string'
  })
  .demand(1)
  .strict()
  .argv;

